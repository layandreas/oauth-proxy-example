error_log /dev/stdout info;

events {
  worker_connections  1024;  ## Default: 1024
}


http {
    access_log /dev/stdout;

    fastcgi_buffers 32 32k;
    fastcgi_buffer_size 64k;
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    server {
        listen 80;
        server_name localhost;

        location /oauth2/ {
            proxy_pass       http://host.docker.internal:4180;
            proxy_set_header Host                    $host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Scheme                $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            # or, if you are handling multiple domains:
            # proxy_set_header X-Auth-Request-Redirect $scheme://$host$request_uri;
        }

        # Anyone with an account can access the backend when using this
        # endpoint
        location = /oauth2/auth {
            proxy_pass       http://host.docker.internal:4180;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

        # Anyone with group2 can access the backend when using this
        # endpoint
        # We need this hacky workaround with different endpoints per group
        # as nginx will escape the query string when passing it to the auth server
        # with auth_request. Thus we need proxy_pass, see:
        # https://github.com/oauth2-proxy/oauth2-proxy/issues/2057#issuecomment-1602546342
        location = /oauth2/auth_group1 {
            proxy_pass       http://host.docker.internal:4180/oauth2/auth?allowed_groups=group1;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

        location = /oauth2/auth_group2 {
            proxy_pass       http://host.docker.internal:4180/oauth2/auth?allowed_groups=group2;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

        location = /oauth2/sign_out {
            proxy_pass       http://host.docker.internal:4180;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

        location / {
            alias /usr/local/bin/;
            index logout.html;
        }

        location /app1 {
            # Anyone with valid account can access
            auth_request /oauth2/auth; 
            include /usr/local/bin/nginx_conf_streamlit_with_auth.conf;
            proxy_pass http://host.docker.internal:8501/app1;
        }

        location /app2 {
            # Only users with group2 can access
            auth_request /oauth2/auth_group2;
            include /usr/local/bin/nginx_conf_streamlit_with_auth.conf;
            proxy_pass http://host.docker.internal:8502/app2;
        }
        
    }
}